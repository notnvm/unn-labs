<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="index.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="x_index.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="h_index.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="v_index.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="v_index_corr.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="v_diff.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="loc_err_est.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="v_index_updated.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="division.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="doubling.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="abs_difference.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>